Get["pathSetup.mth"]
SetDirectory["/msu/scratch2/m1gsa00/git/AMASeriesRepresentation/AMASeriesRepresentation"]
Needs["AMASeriesRepresentation`"]
Needs["betterRBC`"]
smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]]

approx=4*{1,1,1};theK=5;iters=7;

(*
{pt,tf,ply,iply,dply}=smolyakInterpolationPrep[approx,{betterRBCMean,betterRBCSD,betterRBCMinZ,betterRBCMaxZ,betterRBCvv},theDistBetter];
*)
{pt,tf,ply,iply,dply}=smolyakInterpolationPrep[approx,smolRng,theDistBetter];

toIg=aGSpecBetter[[1]];
sgSpec={toIg,smolRng,pt,tf,ply,iply,1,approx};

X0Z0=genX0Z0Funcs[linModBetter];



theFRExt=genFRExtFunc[{4,1,4},linModBetter,{X0Z0,5},eqnsCompiledBetter,
"xVarRanges"->{{0.01,2},{0.01,2},{0.01,20},{0.85,1.3}}];

(*
aRes=parallelMakeGenericInterpFuncs[theFRExt,{},sgSpec,smolyakInterpolation,{}]

theFRExt01=genFRExtFunc[{4,1,4},linModBetter,{aRes[[2]],2},eqnsCompiledBetter,
"xVarRanges"->{{0.01,2},{0.01,2},{0.01,20},{0.85,1.3}}];


*)
interpData=parallelSmolyakGenInterpData[theFRExt01,sgSpec]
numEps=1
numArgs=Length[pt[[1]]]
numFuncs=Length[interpData[[1]]]
funcArgs=Table[Unique["f03Args"],{numArgs}]
theXs=Table[xx[ii],{ii,numArgs}]
longFuncArgs=fillInSymb[{{},toIg,funcArgs}]
funcSubs=Thread[theXs->funcArgs]
longFuncArgs=fillInSymb[{{},toIg,funcArgs}]
funcSubs=Thread[theXs->funcArgs]
interpFuncList=
Map[Function[funcIdx,
With[{theInterps=smolyakInterpolation[interpData[[All,funcIdx]],sgSpec,{}]},
With[{smolApp=theInterps},
smolApp]]],Range[numFuncs]]
applied=Transpose[{Map[notApply[#,funcArgs]/.funcSubs&,
Map[First,interpFuncList]]}]
appliedExp=Transpose[{Map[notApply[#,funcArgs]/.funcSubs&,
Map[Last,interpFuncList]]}]
thePair=
{
ReplacePart[
        Function[xxxxxxx, applied],
                {1->longFuncArgs}]/.notApply->Apply,
ReplacePart[
        Function[xxxxxxx, appliedExp],
                {1->Drop[longFuncArgs,-numEps]}]/.notApply->Apply
}
replaceEqnOrExp[thePair[[1]],longFuncArgs,2,{}]
replaceEqnOrExp[thePair[[2]],Drop[longFuncArgs,-numEps],3,{}]








(*
{tm,ig}=Timing[theRes=parallelNestGenericIterREInterp[genFRExtFunc,linModBetter,
{X0Z0,theK},eqnsCompiledBetter,sgSpec,smolyakInterpolation,{},iters,"xVarRanges"->{{0.01,2},{0.01,2},{0.01,20},{0.85,1.3}}]];
*)



(*
theFRExt @@ anXEpsFlatBetter
DistributeDefinitions[X0Z0,theFRExt];
*)
