Get["pathSetup.mth"]
Get["AMASeriesRepresentation`"]
Get["emscsToMma`"]
Print["after emscsToMma"]
Get["betterRBCCompSlack`"]
Print["after betterRBCCompSlack"]









X0Z0CompSlack=genX0Z0Funcs[linModBetterCompSlack];


theFRTrips=genFRExtFunc[{7,1,7},linModBetterCompSlack,{X0Z0CompSlack,2},
rbcEqnsBetterCompSlack]

{evaluateTriple[theFRTrips[[1,1]],anXEpsFlatBetterCompSlack],
evaluateTriple[theFRTrips[[1,2]],anXEpsFlatBetterCompSlack]}



ap=3*{1,1,1};
smolRng=#[[{2,3}]]&/@Drop[aGSpecBetterCompSlack,2][[1]];
{pt,tf,ply,iply,dply}=smolyakInterpolationPrep[ap,smolRng,theDistBetterCompSlack];
toIg=aGSpecBetterCompSlack[[1]];
sgSpecCompSlack={toIg,smolRng,pt,tf,ply,iply,1,ap,{}};


smolyakGenInterpData[theFRTrips,sgSpecCompSlack]
parallelSmolyakGenInterpData[theFRTrips,sgSpecCompSlack]

makeSmolyakInterpFuncs[theFRTrips,sgSpecCompSlack]
parallelMakeGenericInterpFuncs[theFRTrips,{},sgSpecCompSlack,smolyakInterpolation,{}]

parallelDoGenericIterREInterp[genFRExtFunc,
linModBetterCompSlack,{X0Z0CompSlack,5},
rbcEqnsBetterCompSlack,sgSpecCompSlack,
smolyakInterpolation,{}]

(*



*)

hey=parallelNestGenericIterREInterp[genFRExtFunc,
linModBetterCompSlack,{X0Z0CompSlack,20},
rbcEqnsBetterCompSlack,sgSpecCompSlack,
smolyakInterpolation,{},15];

<<JavaGraphics`
Plot3D[{.363318,(hey[[-1,2]][99,99,kk,99,99,99,tt])[[2]]},{kk,betterRBCCompSlack`Private`kLow,betterRBCCompSlack`Private`kHigh},{tt,0.9,1.1},PlotRange->All]

