Get["pathSetup.mth"]
Needs["AMASeriesRepresentation`"]
Needs["mathSmolyak`"]
Get["betterRBC`"]
InstallJava[]
AddToClassPath["/msu/home/m1gsa00/NetBeansProjects/myLibsvm/build/classes"]

svmDoer = 
 LoadJavaClass["libsvm.svm"];


smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]];
{pt,tf,ply,iply}=smolyakInterpolationPrep[5*{1,1,1},smolRng,theDistBetter];
sgSpec={{1,3},smolRng,pt,tf,ply,iply,1};

newX=sgSpec[[3]]//N
boo=cnstrctExpKern[Transpose[newX],dotProdKernel,1,.01,theDistBetter]
writeExpKern["dwell",boo[[1]],boo[[2]],boo[[3]],boo[[5]],boo[[6]]]
Print["compiling java"];
Run["(source ~/.bashrc;javac forImport/dwell.java)"]

AbsoluteTiming[
With[{hrz=1,len=1},With[{smol=nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],hrz},eqnsCompiledBetter,sgSpec,theDistBetter,smolyakInterpolation,{},len],
slin=nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],hrz},eqnsCompiledBetter,sgSpec,theDistBetter,svmRegressionLinear,{1.0,.01},len]},{smol[[-1,1]] @@anXEpsFlatBetter, slin[[-1,1]] @@ anXEpsFlatBetter, simpRBCExactDRBetter @@ anXEpsFlatBetter}]]]
(*






X0Z0=genX0Z0Funcs[linModBetter];

theLilFunc=genLilXkZkFunc[linModBetter, {X0Z0,2},anXEpsBetter];


theFR=genFRFunc[{4,1,4},theLilFunc,eqnsCompiledBetter];
theFR@@anXEpsFlatBetter

theFP=genFPFunc[{genFRFunc},linModBetter,{X0Z0,2},eqnsCompiledBetter];

theFP@@anXEpsFlatBetter



smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]];
{pt,tf,ply,iply}=smolyakInterpolationPrep[2*{1,1,1},smolRng,theDistBetter];
sgSpec={{1,3},smolRng,pt,tf,ply,iply,1};
{tmSmol,ig}=Timing[{theSmolFPInterp,theSmolFPInterpExp}=makeSmolyakInterpFuncs[theFP,sgSpec]];
{theSmolFPInterp @@ anXEpsFlatBetter,theSmolFPInterpExp @@ anXFlatBetter,theFP @@ anXEpsFlatBetter}


{tmSmol,ig}=Timing[anIter=doSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter]];

{tmSmol,ig}=Timing[moreIters=nestSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,10]];

(*
{tmSmol5,ig}=Timing[moreIters5=nestSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],5},eqnsCompiledBetter,sgSpec,theDistBetter,10]];

{tmSmol10,ig}=Timing[moreIters10=nestSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],10},eqnsCompiledBetter,sgSpec,theDistBetter,10]];
{tmSmol20,ig}=Timing[moreIters20=nestSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],20},eqnsCompiledBetter,sgSpec,theDistBetter,20]];

*)
smol=nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,smolyakInterpolation,{},3];
newX=sgSpec[[3]]//N
boo=cnstrctExpKern[Transpose[newX],dotProdKernel,1,.01,theDistBetter]
writeExpKern["dwell",boo[[1]],boo[[2]],boo[[3]],boo[[5]],boo[[6]]]
Print["compiling java"];
Run["(source ~/.bashrc;javac forImport/dwell.java)"]

slin=nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,svmRegressionLinear,{1.0,.01},2];
slin=nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,svmRegressionLinear,{1.0,.01},4];


(*

Through[dit[[2]] @@ # &[anXEpsFlatBetter]]

*)
*)
