Get["pathSetup.mth"]
Get["AMASeriesRepresentation`"]
Get["betterRBC`"]
Get["notBetterRBC`"]
Get["betterRBCCompSlack`"]


theFRExtGateCS=genFRExtFunc[{7,1,7},linModBetterCompSlack,{genX0Z0Funcs[linModBetterCompSlack],2},eqnsCompiledBetterCompSlack]

theFRExt=genFRExtFunc[{4,1,4},linModBetter,{x0z0=genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter]

theFRExtNot=genFRExtFunc[{6,1,6},linModNotBetter,{x0z0=genX0Z0Funcs[linModNotBetter],2},eqnsCompiledNotBetter]

approx=1*{1,1,1};
{ptErg,tfErg,plyErg,iplyErg,dplyErg}=smolyakInterpolationPrep[approx,{betterRBCMean,betterRBCSD,betterRBCMinZ,betterRBCMaxZ,betterRBCvv},theDistBetter];
smolRngErg=Transpose[{betterRBCMinZ,betterRBCMaxZ}];
toIg={1,2,4,5,6};
sgSpecErg={toIg,smolRngErg,ptErg,tfErg,plyErg,iplyErg,1,approx,
{betterRBCMean,betterRBCSD,betterRBCMinZ,betterRBCMaxZ,betterRBCvv}};



{evaluateTriple[theFRExtGateCS[[1,2]],anXEpsFlatBetterCompSlack],
evaluateTriple[theFRExtGateCS[[1,1]],anXEpsFlatBetterCompSlack]}

smolyakGenInterpData[theFRExtGateCS,sgSpecErg]
parallelSmolyakGenInterpData[theFRExtGateCS,sgSpecErg]
