Get["pathSetup.mth"]
Get["AMASeriesRepresentation`"]
Get["betterRBC`"]
Get["notBetterRBC`"]
Get["betterRBCCompSlack`"]


theFRExtGateCS=genFRExtFunc[{7,1,7},linModBetterCompSlack,{genX0Z0Funcs[linModBetterCompSlack],2},eqnsCompiledBetterCompSlack]

theFRExt=genFRExtFunc[{4,1,4},linModBetter,{x0z0=genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter]

theFRExtNot=genFRExtFunc[{6,1,6},linModNotBetter,{x0z0=genX0Z0Funcs[linModNotBetter],2},eqnsCompiledNotBetter]

evaluateTriple[theFRExtGateCS[[2]],anXEpsFlatBetterCompSlack]

expr=1-(1-dd)*delta+theta*delta*alpha*kk^(alpha-1);
(*
theMat=({{0,1,expr},
{1,-eta*cc^(-(eta+1)),0},
{expr,0,alpha*(alpha-1)kk^(alpha-2)}}/.
{alpha->betterRBCCompSlack`Private`alpha,
eta->1,
delta->betterRBCCompSlack`Private`delta,
dd->betterRBCCompSlack`Private`dd})/.betterRBCCompSlack`Private`paramSubs
*)
fir={1,1};
theSec={0,(1-dd)+thetatp1*alpha*kt^(alpha-1)}
theGrad=
{fir,-fir,delta*theSec,-delta*theSec};
theHess={{-eta * ct^(-(eta+1)),0},{0,alpha*(alpha-1)*kt^(alpha-2)}}

bordered01=(blockMatrix[{{blockMatrix[{{ConstantArray[0,{4,4}],theGrad}}]},
{blockMatrix[{{Transpose[theGrad],theHess}}]}}]/.
{alpha->betterRBCCompSlack`Private`alpha,
eta->1,
delta->betterRBCCompSlack`Private`delta,
dd->betterRBCCompSlack`Private`dd})/.betterRBCCompSlack`Private`paramSubs
