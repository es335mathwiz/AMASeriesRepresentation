Get["pathSetup.mth"]
Get["AMASeriesRepresentation`"]
Get["betterRBC.m"]



X0Z0=genX0Z0Funcs[linModBetter];
theLilFunc=genLilXkZkFunc[linModBetter, {X0Z0,2},anXEpsBetter];
(*findroot function*)
theFR=genFRFunc[{4,1,4},theLilFunc,eqnsCompiledBetter];
theFR@@anXEpsFlatBetter
(*fixed point function*)
theFP=genFPFunc[{genFRFunc},linModBetter,{X0Z0,2},eqnsCompiledBetter];
theFP@@anXEpsFlatBetter




smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]]
{pt,tf,ply,iply,iplyNew}=smolyakInterpolationPrep[{1,1,1},smolRng,theDistBetter];
toIg=aGSpecBetter[[1]];
(*integral not implementd yet*)


sgSpec={toIg,smolRng,pt,tf,ply,iplyNew,1};
siData=smolyakGenInterpData[theFP,sgSpec];
bips=smolyakInterpolation[siData[[All,#]],sgSpec]& /@ Range[8]

sgSpecAgain={toIg,smolRng,pt,tf,ply,iplyNew,1};
siDataAgain=smolyakGenInterpData[theFP,sgSpecAgain];


dobipints=
NExpectation[bips[[#,1]][anXEpsFlatBetter[[2]],anXEpsFlatBetter[[4]],theEps],theEps \[Distributed] NormalDistribution[0,1/100]]&/@ Range[8]



bips[[#,2]][anXEpsFlatBetter[[2]],anXEpsFlatBetter[[4]]]&/@ Range[8]

(*



X0Z0=genX0Z0Funcs[linModBetter];
theLilFunc=genLilXkZkFunc[linModBetter, {X0Z0,2},anXEpsBetter];
(*findroot function*)
theFR=genFRFunc[{4,1,4},theLilFunc,eqnsCompiledBetter];
theFR@@anXEpsFlatBetter
(*fixed point function*)
theFP=genFPFunc[{genFRFunc},linModBetter,{X0Z0,2},eqnsCompiledBetter];
theFP@@anXEpsFlatBetter



genInterpData[theFP,aGSpecBetter];

smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]]
{pt,tf,ply,iply,iplyNew}=smolyakInterpolationPrep[{1,1,1},smolRng,theDistBetter];
toIg=aGSpecBetter[[1]];
(*integral not implementd yet*)
sgSpec={toIg,smolRng,pt,tf,ply,iply,1};
siData=smolyakGenInterpData[theFP,sgSpec];


bip=smolyakInterpolation[siData[[All,1]],sgSpec]


{tmSmol,ig}=Timing[theSmolFPInterp=makeSmolyakInterpFuncs[theFP,sgSpec]];
(*Through[theSmolFPInterp @@#&[ anXEpsFlatBetter]]*)


{tm,ig}=Timing[theFPInterp=makeInterpFunc[theFP,aGSpecBetter]]
(*
theFPInterp @@ anXEpsFlatBetter*)

{tmgnxzpar,ig}=Timing[XZRE=parallelGenXZREInterpFunc[{4,1,4},theFPInterp,aGSpecBetter,theDistBetter]];

(*XZRE @@ anXEpsFlatBetter*)

{smoltmgnxzpar,ig}=Timing[smolXZRE=parallelGenXZREInterpFunc[{4,1,4},theSmolFPInterp[[1]],aGSpecBetter,theDistBetter]];
smolXZRE @@ anXEpsFlatBetter

{smoltmgnxzpar,ig}=Timing[smolXZRE=parallelGenXZREInterpFunc[{4,1,4},theSmolFPInterp[[2]],aGSpecBetter,theDistBetter]];
smolXZRE @@ anXEpsFlatBetter



gxz=genSmolyakXZREInterpFunc[{4,1,4},theFPInterp,toIg,smolRng,pt,tf,ply,aGSpecBetter,theDistBetter]

dit=doSmolyakIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter];

{dit[[1]] @@ anXEpsFlatBetter,dit[[2]] @@ anXEpsFlatBetter}




doComp[gVal_Integer,iters_Integer]:=
Module[{theRes666,parallelRes666,
gs666={{1, 3}, 1, {{gVal, 0.018732441104784652, 0.7492976441913861}, {gVal, 9/10, 11/10},   {gVal, -0.03, 0.09}}}},
	   theRes666=Timing[nestIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,gs666,theDistBetter,iters]];
parallelRes666=Timing[parallelNestIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,gs666,theDistBetter,iters]];
{theRes666,parallelRes666}]



chkConv[gVal_Integer,iters_Integer,aVal_?MatrixQ]:=
		With[{gs666={{1, 3}, 1, {{gVal, 0.018732441104784652, 0.7492976441913861}, {gVal, 9/10, 11/10},   {gVal, -0.03, 0.09}}}},
	  With[{
aBunch=parallelNestIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,gs666,theDistBetter,iters]},
		   {(#[[1]] @@ 	 Flatten[aVal]),(#[[2]] @@ 	 Flatten[aVal])}& /@ Drop[aBunch,1]]]



chkConv[1,1,anXEpsBetter]
(*chkConv[3,7,anXEpsBetter]*)




doGenericComp[gVal_Integer,iters_Integer]:=
Module[{theRes666,parallelRes666,
gs666={{1, 3}, 1, {{gVal, 0.018732441104784652, 0.7492976441913861}, {gVal, 9/10, 11/10},   {gVal, -0.03, 0.09}}}},
	   theRes666=Timing[nestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,gs666,theDistBetter,iters]];
parallelRes666=Timing[parallelNestIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,gs666,theDistBetter,iters]];
{theRes666,parallelRes666}]



chkGenericConv[gVal_Integer,iters_Integer,aVal_?MatrixQ]:=
Module[{},
smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]];
{pt,tf,ply,iply,iplyNew}=smolyakInterpolationPrep[gVal*{1,1,1},smolRng,theDistBetter];
sgSpec={{1,3},smolRng,pt,tf,ply,iply,1};
With[{
aBunch=parallelNestGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,smolyakInterpolation,{},iters]},
{(#[[1]] @@Flatten[aVal]),(#[[2]] @@ 	 Flatten[aVal])}& /@ Drop[aBunch,1]]]

(*
smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]];
{pt,tf,ply,iply}=smolyakInterpolationPrep[gVal*{1,1,1},smolRng,theDistBetter];
sgSpec={{1,3},smolRng,pt,tf,ply,iply,1};

poo=parallelDoGenericIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,sgSpec,theDistBetter,smolyakInterpolation,{}]

trypoo=genXZFuncRE[{4,2,4},poo[[1]],theDistBetter]

goo=parallelDoIterREInterp[{genFRFunc},linModBetter, {genX0Z0Funcs[linModBetter],2},eqnsCompiledBetter,aGSpecBetter,theDistBetter]
forNExpGoo[vars:{cc_?NumberQ,kk_?NumberQ,nl_?NumberQ,th_?NumberQ,eps_?NumberQ},idx_Integer]:=(goo[[1]] @@ vars)[[idx]]


myNExpectation[forNExpGoo[Append[Drop[anXEpsFlatBetter,-1],theEps],1],{theEps \[Distributed] NormalDistribution[0,0.01]}]

simpRBCExactDRBetter @@ anXEpsFlatBetter

Out[53]= {{0.392455}, {0.203981}, {2.81758}, {1.10577}}

 betterRBCExactCondExp @@ anXEpsFlatBetter

Out[5]= {{0.38857}, {0.201962}, {2.81758}, {1.09483}}


*)
*)
