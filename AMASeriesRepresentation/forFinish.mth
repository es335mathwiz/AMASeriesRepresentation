(*Limits Mathematica to requested resources*)
Unprotect[$ProcessorCount];(*$ProcessorCount = 20;*)
Print["pcount=",$ProcessorCount]

sjn=Environment["SLURM_JOB_NODELIST"]
hosts=If[sjn==$Failed,0,Counts[StringSplit[sjn,","]]]
Print["sjn=",sjn,"<<<<"]
local=$MachineName
Print["local=",local,"<<<<"]
hosts[local]--<
Needs["SubKernels`RemoteKernels`"]

math = "/opt/mathematica/11.3/Executables/MathKernel" <> 
   " -wstp -linkmode Connect `4` -linkname `2` -subkernel -noinit >&  \
/dev/null &";


ssh = "source ~/.bashrc;export LD_LIBRARY_PATH=;ssh"
user="m1gsa00"
remote = (SubKernels`RemoteKernels`RemoteMachine[#, 
  ssh <> " " <> user <> "@" <> # <>
    " \"" <> math <> "\"", 28])&/@
(Keys[hosts])


Print["hosts=",hosts];
Print[remote // InputForm]
kerns = LaunchKernels[remote]
Print["pre eval"]
ParallelEvaluate[$MachineName]
Print["post eval"]
(*Get["JavaGraphics`"]*)
ParallelEvaluate[SetDirectory["/msu/scratch2/m1gsa00/git/AMASeriesRepresentation/AMASeriesRepresentation"]]
Get["tests/pathSetup.mth"]
ParallelEvaluate[Get["tests/pathSetup.mth"]]
ParallelEvaluate[Get["AMASeriesRepresentation`"]];
Needs["AMASeriesRepresentation`"]
ParallelNeeds["AMASeriesRepresentation`"]
Get["finishPaper.mth"]
ParallelEvaluate[Get["finishPaper.mth"]]
tval=True;
Table[With[{theResNow=Prepend[Timing[errBoundInfo[{ii,jj,kk},
theK,numPts,"addTailContribution"->tval]],Length[Kernels[]]]},PutAppend[theResNow,"someResultsTrue.mth"];Print[{"theResNow=",theResNow}];theResNow],{kk,1,5},{jj,1,5},{ii,1,5},
{theK,20,20,10},{numPts,30,30,10}]


Quit
