Get["pathSetup.mth"]
Get["betterJuillardRBC.m"]

tMatNorm[kk_Integer]:=Norm[
truncErrorMat @@ Append[Through[{getF,getPhi}[linModBetterJuillard]],kk],Infinity];
sumHNorms=
With[{theH=getH[linModBetterJuillard]},
	 Plus @@ (Norm[#,Infinity]&/@
	  {theH[[All,Range[4]]],
	   theH[[All,4+Range[4]]],
	   theH[[All,8+Range[4]]]})]

(*
gspec
{{1., 2., 3., 5.}, 1.,
{{4., 0.14986, 0.224789}, {3., 0.9, 1.1}, {3., -0.03, 0.09}}}


 *)




{tim00,aBunch00}=Timing[nestIterREInterp[{genFRFunc},linModBetterJuillard,{genX0Z0Funcs[linModBetterJuillard],2},rbcEqnsFunctionalNextBetterJuillard,aGSpecBetterJuillard,theDistBetterJuillard,5]];
{(xz00=aBunch00[[-1,1]]) @@ anXEpsFlatBetterJuillard,
 (XZ00=aBunch00[[-1,2]]) @@ anXFlatBetterJuillard}

(*
ss=betterJuillardRBC`Private`ssSolnVecRE;
bigSS=iterateDRREIntegrate[simpRBCExactDRBetterJuillard,Join[ss,{{0}}],theDistBetterJuillard,2]
checkMod[{genFRFunc},linModBetter,aGSpecBetter,theDistBetter,anXBetter,{{0.01}},bigSS,rbcEqnsFunctionalNextBetter]

checkMod[{genFRFunc},linModBetterJuillard,aGSpecBetterJuillard,theDistBetterJuillard,anXBetterJuillard,{{0.01}},bigSS,rbcEqnsFunctionalNextBetterJuillard]



chkgd=iterateDRREIntegrate[xz00,Transpose[{{0.1, 0.3,0.2, 1., 1.0, -0.01}}],theDistBetterJuillard,20]

 *)

actDiff00=
(simpRBCExactDRBetterJuillard @@ anXEpsFlatBetterJuillard)-
(xz00 @@anXEpsFlatBetterJuillard)[[Range[4]]]


iter00=iterateDRREIntegrate[xz00,anXEpsBetterJuillard,theDistBetterJuillard,1];
noPhipth00=worstPathForErrDRREIntegrate[xz00,anXBetterJuillard,theDistBetterJuillard,rbcEqnsFunctionalNextBetterJuillard];
pth00=worstPathForErrDRREIntegrate[getPhi[linModBetterJuillard],xz00,anXBetterJuillard,theDistBetterJuillard,rbcEqnsFunctionalNextBetterJuillard];
appxz00=rbcEqnsFunctionalNextBetterJuillard @@ Flatten[pth00]
maxNormErrxz00=Norm[appxz00,Infinity]
phiappNorm=Norm[getPhi[linModBetterJuillard]. Transpose[{appxz00}],Infinity]

waypessimistic00=Norm[getPhi[linModBetterJuillard],Infinity]*tMatNorm[0]*maxNormErrxz00
pessimistic00=		tMatNorm[0]*phiappNorm



(*
{{1., 2., 3., 5.}, 1., 
    {{4., 0.14986, 0.224789}, {3., 0.9, 1.1}, {3., -0.03, 0.09}}}

{0.1, 0.2, 0.3,0.018, 1., 1.1, -0.1}
rbcEqnsFunctionalNextBetterJuillard @@ (Append[chk=iterateDRREIntegrate[xz00,{0.1, 0.2, 0.3,0.018, 1., 1.1, -0.1},theDistBetterJuillard,2]//Flatten,anXEpsBetterJuillard[[-1,1]]])


rbcEqnsFunctionalNextBetterJuillard @@ (Append[chk=iterateDRREIntegrate[xz00,anXEpsBetterJuillard,theDistBetterJuillard,2]//Flatten,anXEpsBetterJuillard[[-1,1]]])
 *)


aBetterJuillardGSpecBetterJuillard=
{{1, 3}, 1, {{5, 0.018732441104784652, 0.7492976441913861}, {5, 9/10, 11/10}, 
  {5, -0.03, 0.09}}}


{timcc,aBunchcc}=Timing[nestIterREInterp[{genFRFunc},linModBetterJuillard,{genX0Z0Funcs[linModBetterJuillard],2},rbcEqnsFunctionalNextBetterJuillard,aBetterJuillardGSpecBetterJuillard,theDistBetterJuillard,5]];
{(xzcc=aBunchcc[[-1,1]]) @@ anXEpsFlatBetterJuillard,
 (XZcc=aBunchcc[[-1,2]]) @@ anXFlatBetterJuillard}



actDiffcc=
(simpRBCExactDRBetterJuillard @@ anXEpsFlatBetterJuillard)-
(xzcc @@anXEpsFlatBetterJuillard)[[Range[4]]]




itercc=iterateDRREIntegrate[xzcc,anXEpsBetterJuillard,theDistBetterJuillard,1];
noPhipthcc=worstPathForErrDRREIntegrate[xzcc,anXBetterJuillard,theDistBetterJuillard,rbcEqnsFunctionalNextBetterJuillard];
pthcc=worstPathForErrDRREIntegrate[getPhi[linModBetterJuillard],xzcc,anXBetterJuillard,theDistBetterJuillard,rbcEqnsFunctionalNextBetterJuillard];
appxzcc=rbcEqnsFunctionalNextBetterJuillard @@ Flatten[pthcc]
maxNormErrxzcc=Norm[appxzcc,Infinity]
phiappNorm=Norm[getPhi[linModBetterJuillard]. Transpose[{appxzcc}],Infinity]

waypessimisticcc=Norm[getPhi[linModBetterJuillard],Infinity]*tMatNorm[0]*maxNormErrxzcc
pessimisticcc=		tMatNorm[0]*phiappNorm



(*
truncerrmat
patherr
patherrdrpf
patherrdrreintegrate
evalpatherrdrreintegrate
evalBadPathErrDRREIntegrate
worstPathForErrDRREIntegrate
genErrsREWorst
 *)
