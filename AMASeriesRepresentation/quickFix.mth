
Get["pathSetup.mth"]
Needs["AMASeriesRepresentation`"]
Needs["betterRBC`"]
Needs["mathSmolyak`"]

DistributeDefinitions["AMASeriesRepresentation`"]

X0Z0=genX0Z0Funcs[linModBetter];
theLilFunc=genLilXkZkFunc[linModBetter, {X0Z0,2},anXEpsBetter];
theFR=genFRFunc[{4,1,4},theLilFunc,rbcEqnsFunctionalNextBetter];
theFR@@anXEpsFlatBetter

theFP=genFPFunc[{genFRFunc},linModBetter,{X0Z0,2},rbcEqnsFunctionalNextBetter];

theFP@@anXEpsFlatBetter


toIg=aGSpecBetter[[1]];
smolRng=#[[{2,3}]]&/@Drop[aGSpecBetter,2][[1]]
Print["smolyakinterpolationPrep"];
{pt,tf,ply,ig}=smolyakInterpolationPrep[{1,1,1},smolRng,theDistBetter];

someMoms=Table[mom[3,ii]->Moment[theDistBetter[[1,1,2]],ii],{ii,50}]

{pt,tf,ply,iply}=AMASeriesRepresentation`Private`newSmolyakInterpolationPrep[{1,1,1},smolRng,{someMoms}];



sgSpec={toIg,smolRng,pt,tf,ply,iply,1};
siData=smolyakGenInterpData[theFP,sgSpec];


{bip,sip}=smolyakInterpolation[siData[[All,1]],sgSpec]

{tmSmol,ig}=Timing[theSmolFPInterp=makeSmolyakInterpFunc[theFP,sgSpec]];

{tm,ig}=Timing[theFPInterp=makeInterpFunc[theFP,aGSpecBetter]];
Print["done makeInterpFunc"]


{tm,ig}=Timing[theFPInterp=parallelMakeInterpFunc[theFP,aGSpecBetter]];

theDistBetter



Off[NIntegrate::ncvb];
ParallelEvaluate[Off[NIntegrate::ncvb]];


Profile[{tmgnxzpar,lookey}=Timing[XZRE=parallelGenXZREInterpFunc[{4,1,4},theFPInterp,aGSpecBetter,theDistBetter]]];
 
