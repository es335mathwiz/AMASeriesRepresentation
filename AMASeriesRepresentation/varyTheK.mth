Get["tests/pathSetup.mth"]
Get["AMASeriesRepresentation`"]
Get["firstRBCTrips.m"]



iters=8;

refModel={linModFirstRBCTrips,rbcEqnsFirstRBCTrips,firstRBCTripsExactDR,firstRBCTripsExactDRCE,forErgodicInfo,theDistFirstRBCTrips,toIg,sPSubs}=
(*alphaVal,deltaVal,dd,etaVal,rhoVal.sigmaVal*)
firstRBCGenModel[0.36,1,0.95,1,0.95,0.01];


tryK[approx1x1x1:{_Integer..},theK_Integer,opts:OptionsPattern[]]:=
Module[{},
sPrep1x1x1x5={tryEps,numKern,theName,mthName,bothX0Z0,sgSpecErg,zPts,theFullXs1x1x1x5}=
doSmolPrep[approx1x1x1,99,99,forErgodicInfo,toIg,linModFirstRBCTrips,theDistFirstRBCTrips];
{tm,ig}=Timing[
theRes1x1x1x5=parallelNestGenericIterREInterp[genFRExtFunc,linModFirstRBCTrips,
{bothX0Z0,theK},rbcEqnsFirstRBCTrips,sgSpecErg,smolyakInterpolation,{},theFullXs1x1x1x5,
Apply[Sequence,
FilterRules[{opts},Options[parallelNestGenericIterREInterp]]]]];
errs1x1x1x5=nextSimplestErrXtm1Eps[rbcEqnsFirstRBCTrips,theRes1x1x1x5[[4,-1,1]],
theRes1x1x1x5[[4,-1,2]],Transpose[{#}],1,linModFirstRBCTrips,5]&/@theFullXs1x1x1x5;
actErrs1x1x1x5=Flatten[(((theRes1x1x1x5[[4,-1,1]] @@ #)[[Range[4]]]) - (firstRBCTripsExactDR @@ #))]& /@ theFullXs1x1x1x5;
{theRes1x1x1x5,actErrs1x1x1x5,Mean[Norm/@actErrs1x1x1x5]}]


(*
wholeLot=Table[tryK[bump*{1,1,1},theK],{bump,1,3},{theK,0,10}];
moreWholeLot=Table[tryK[bump*{1,1,1},theK],{bump,1,3},{theK,10,40,5}];

tradLot=Table[tryK[bump*{1,1,1},0,"Traditional"->True],{bump,1,3}];

errVals=Map[Log,wholeLot[[All,All,-1]],{2}]
moreErrVals=Map[Log,moreWholeLot[[All,All,-1]],{2}]


iterswhole=wholeLot[[All,All,1,1]]


errtrad=Log /@(Last /@ tradLot)

iterstrad=tradLot[[All,1,1]]

tradline={Join[{999},errtrad]}
nontradlines=Transpose[ArrayFlatten[{{{Range[0,10]}},{errVals}}]]
moreNonTradlines=Transpose[ArrayFlatten[{{{Range[10,40,5]}},{moreErrVals}}]]
errTab=Join[tradline,nontradlines,moreNonTradlines]
Export["errByKTab.tex",TableForm[errTab],"TeXFragment"]
*)
